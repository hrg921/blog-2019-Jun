{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","subject","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","_this$props","this","siteTitle","subjectDisplay","react_default","HeaderContainer","Title","gatsby_browser_entry","to","PureComponent","styled","header","_templateObject","h1","_templateObject2","Layout","site","siteMetadata","Fragment","header_Header","style","margin","maxWidth","padding","paddingTop","Date","getFullYear","href","_4130953669","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-16acddce193c5bd8c6a3.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout subject=\"Not Found\">\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport styled from 'styled-components';\n\n\ninterface Props {\n  siteTitle: string;\n  subject: string;\n  subjectDisplay: string;\n}\n\nexport default class Header extends React.PureComponent<Props> {\n  public render() {\n    const { siteTitle, subject, subjectDisplay } = this.props;\n    \n    return (\n      <HeaderContainer>\n        <Title>\n          <Link to='/'>\n          {`${siteTitle},`}\n          </Link> \n          <Link to={`/${subject}`}>\n          {` ${subjectDisplay}`}\n          </Link>\n        </Title>\n      </HeaderContainer>\n    )\n  }\n}\n\nconst HeaderContainer = styled.header`\n  position: fixed;\n  top: 16px;\n  left: 16px;\n`;\n\nconst Title = styled.h1`\n  margin-top: 0;\n\n  a {\n    color: #333;\n    text-decoration: none;\n    font-family: 'Amatic SC', cursive;\n  }\n`;\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\ninterface Props {\n  children: React.ReactNode\n  subject: string;\n  subjectDisplay: string;\n}\n\nexport default class Layout extends React.PureComponent<Props> {\n  public render() {\n    const { children, subject, subjectDisplay } = this.props;\n\n    return (\n      <StaticQuery\n        query={query}\n        render={data => {\n          const { title } = data.site.siteMetadata;\n\n          return (\n            <>\n              <Header siteTitle={title} subject={subject} subjectDisplay={subjectDisplay} />\n              <div\n                style={{\n                  margin: `0 auto`,\n                  maxWidth: 960,\n                  padding: `0px 1.0875rem 1.45rem`,\n                  paddingTop: 0,\n                }}\n              >\n                <main>{children}</main>\n                <footer>\n                  © {new Date().getFullYear()}, Built with\n                  {` `}\n                  <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n                </footer>\n              </div>\n            </>\n          )\n        }}\n      />\n    )\n  }\n}\n\nconst query = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}